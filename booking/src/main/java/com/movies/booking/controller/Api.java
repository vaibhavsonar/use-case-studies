/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.2.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.movies.booking.controller;

import com.movies.booking.model.Theatre;
import com.movies.booking.resources.TheatreNotFoundError;
import com.movies.booking.resources.TheatreRequest;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.tags.Tag;
import jakarta.annotation.Generated;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.context.request.NativeWebRequest;

import javax.validation.Valid;
import java.util.List;
import java.util.Optional;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-07-31T21:13:18.590717+05:30[Asia/Kolkata]")
@Validated
@Tag(name = "api", description = "Theatres")
public interface Api {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /api/v1/theatres : Get all theatres information
     * Get all theatres information
     *
     * @param theatreRequest (optional)
     * @return Success (status code 200)
     * or Theatre not found (status code 404)
     */
    @Operation(
            operationId = "getTheatres",
            summary = "Get all theatres information",
            tags = {"theatres"},
            responses = {
                    @ApiResponse(responseCode = "200", description = "Success", content = {
                            @Content(mediaType = "application/json", schema = @Schema(implementation = Theatre.class))
                    }),
                    @ApiResponse(responseCode = "404", description = "Theatre not found", content = {
                            @Content(mediaType = "application/json", schema = @Schema(implementation = TheatreNotFoundError.class))
                    })
            }
    )
    @RequestMapping(
            method = RequestMethod.GET,
            value = "/api/v1/theatres",
            produces = {"application/json"},
            consumes = {"application/json"}
    )
    default ResponseEntity<List<Theatre>> getTheatres(
            @Parameter(name = "TheatreRequest", description = "") @Valid @RequestBody(required = false) TheatreRequest theatreRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType : MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"city\" : \"city\", \"name\" : \"name\", \"id\" : \"id\", \"showsByDates\" : [ { \"date\" : \"date\", \"shows\" : [ { \"startDateTime\" : 0.8008281904610115, \"movie\" : { \"cast\" : [ \"cast\", \"cast\" ], \"thumbnail\" : \"thumbnail\", \"extract\" : \"extract\", \"year\" : 6.027456183070403, \"genres\" : [ \"genres\", \"genres\" ], \"id\" : \"id\", \"href\" : \"href\", \"title\" : \"title\", \"thumbnailWidth\" : 1.4658129805029452, \"thumbnailHeight\" : 5.962133916683182 }, \"isRunning\" : true, \"id\" : \"id\", \"upcoming\" : true }, { \"startDateTime\" : 0.8008281904610115, \"movie\" : { \"cast\" : [ \"cast\", \"cast\" ], \"thumbnail\" : \"thumbnail\", \"extract\" : \"extract\", \"year\" : 6.027456183070403, \"genres\" : [ \"genres\", \"genres\" ], \"id\" : \"id\", \"href\" : \"href\", \"title\" : \"title\", \"thumbnailWidth\" : 1.4658129805029452, \"thumbnailHeight\" : 5.962133916683182 }, \"isRunning\" : true, \"id\" : \"id\", \"upcoming\" : true } ], \"id\" : \"id\" }, { \"date\" : \"date\", \"shows\" : [ { \"startDateTime\" : 0.8008281904610115, \"movie\" : { \"cast\" : [ \"cast\", \"cast\" ], \"thumbnail\" : \"thumbnail\", \"extract\" : \"extract\", \"year\" : 6.027456183070403, \"genres\" : [ \"genres\", \"genres\" ], \"id\" : \"id\", \"href\" : \"href\", \"title\" : \"title\", \"thumbnailWidth\" : 1.4658129805029452, \"thumbnailHeight\" : 5.962133916683182 }, \"isRunning\" : true, \"id\" : \"id\", \"upcoming\" : true }, { \"startDateTime\" : 0.8008281904610115, \"movie\" : { \"cast\" : [ \"cast\", \"cast\" ], \"thumbnail\" : \"thumbnail\", \"extract\" : \"extract\", \"year\" : 6.027456183070403, \"genres\" : [ \"genres\", \"genres\" ], \"id\" : \"id\", \"href\" : \"href\", \"title\" : \"title\", \"thumbnailWidth\" : 1.4658129805029452, \"thumbnailHeight\" : 5.962133916683182 }, \"isRunning\" : true, \"id\" : \"id\", \"upcoming\" : true } ], \"id\" : \"id\" } ] }";
//                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
